name: nodejs
on:
  workflow_dispatch:
    inputs:
      NODE_COMMANDS:
        type: choice
        description: select your build commads
        options:
        - npm run build:dev --if-present
        - npm run build:prod --if-present
jobs:
  ci:
    uses: ohdat/.github/.github/workflows/node-ci.yml@master
    secrets:
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      GIT_USER: ${{ secrets.GIT_USER }}
      GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
    with: 
      NODE_COMMANDS: ${{ inputs.NODE_COMMANDS }}
  build-develop:
    needs: ci
    uses: ohdat/.github/.github/workflows/helm-cd.yml@master
    if: ${{ inputs.NODE_COMMANDS  == 'npm run build:dev --if-present' }}
    strategy:
      matrix:
        include:
          - helm: http-${{ github.event.repository.name }} ohdat/website
            set: "image.repository=${{ needs.ci.outputs.image}},resources=null,gateway.hosts[0]=${{ github.event.repository.name }}.dev.xxjio.com"
    with:
      environment: develop
      kubename: ohdat-dev
      namespace: dev-website
      helm: ${{ matrix.helm }}
      set: ${{ matrix.set }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  build-production:
    needs: ci
    uses: ohdat/.github/.github/workflows/helm-node-cd.yml@master
    if: ${{ inputs.NODE_COMMANDS  == 'npm run build:prod --if-present' }}
    strategy:
      matrix:
        include:
          - helm: http-${{ github.event.repository.name }} ohdat/website
            set: "image.repository=${{ needs.ci.outputs.image}},gateway.hosts[0]=${{ github.event.repository.name }}.ohdat.io"
    with:
      environment: production
      kubename: ohdat-eks
      namespace: website
      helm: ${{ matrix.helm }}
      set: ${{ matrix.set }}
      distribution: xxxxxxxxxxxx
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
