name: Golnag CI
on:
  workflow_call:
    inputs:
      DOCKERHUB_USERNAME:
        default: ohdat123
        type: string
      GO_VERSION:
        default: 1.20.0
        type: string
      BASE_VERSION:
        default: "1.1"
        type: string
    secrets:
      DOCKERHUB_TOKEN:
        required: true
      GIT_USER:
        required: true
      GIT_TOKEN:
        required: true
    outputs:
      image:
        description: 'The image of docker build tag'
        value: ${{ jobs.buildAndPush.outputs.image }}
jobs:
  buildAndPush:
    runs-on: ubuntu-latest
    env:
      TAG: ${{ inputs.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{inputs.BASE_VERSION}}.${{ github.run_number }}
      LATEST_TAG: ${{ inputs.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
    outputs:
      image: ${{ env.TAG }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ inputs.GO_VERSION }}
      - uses: actions/cache@v3
        with:
          # In order:
          # * Module download cache tets
          # * Build cache (Linux)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: set GOPRIVATE
        run: |
            go env -w GOPRIVATE=github.com/ohdat
            git config --global url."https://${{ secrets.GIT_USER }}:${{ secrets.GIT_TOKEN }}@github.com".insteadOf "https://github.com"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: 1.7.0
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ inputs.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.TAG }},${{ env.LATEST_TAG }}